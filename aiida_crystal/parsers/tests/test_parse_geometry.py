"""
test reading/creating .gui files
for EXTERNAL keyword use
"""
import os
import pytest
import numpy as np

from ase.spacegroup import crystal
from jsonextended import edict
from aiida_crystal.tests import TEST_DIR
from aiida_crystal.io.geometry import read_gui_file, get_centering_code, get_crystal_system, \
    crystal_gui_string, structdict_to_ase, compute_symmetry_3d, ase_to_structdict, ops_frac_to_cart, ops_cart_to_frac


@pytest.mark.parametrize(
    "sg_num,sg_symbol,centering,crystal_type",
    [
        (15, "C2/c", 4, 2),  # pyrrhotite-4c
        (205, 'Pa3', 1, 6),  # pyrite
        (58, 'Pnnm', 1, 3),  # marcasite
        (190, 'P-62c', 1, 5),  # troilite
        (129, 'P4/nmm', 1,
         4),  # mackinawite (origin choice 2) CENTRING CODE 1/1
        (227, 'Fd3m', 5, 6)  # greigite
    ])
def test_get_centering_code(sg_num, sg_symbol, centering, crystal_type):
    """Test reading centering code"""
    assert get_crystal_system(sg_num, as_number=True) == crystal_type
    assert get_centering_code(sg_num, sg_symbol) == centering


def test_read_gui_file():
    """Test reading and parsing geometry file"""
    inpath = os.path.join(TEST_DIR, "input_files",
                          'mgo_sto3g_external.crystal.gui')
    data = read_gui_file(inpath)

    expected = {
        'natoms':
        2,
        'lattice': [[0.0, 2.105, 2.105], [2.105, 0.0, 2.105],
                    [2.105, 2.105, 0.0]],
        'pbc': [True, True, True],
        'crystal_type':
        'cubic',
        'origin_setting':
        5,
        'ccoords': [[0.0, 0.0, 0.0], [2.105, 2.105, 2.105]],
        'atomic_numbers': [12, 8],
        'nsymops':
        48,
        'symops':
        [[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], [
            0.0, 1.0, 0.0, 1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0
        ], [-1.0, -1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [
            0.0, 0.0, 1.0, -1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0
        ], [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0,
            0.0], [0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0],
         [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0], [
             1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0
         ], [-1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [
             0.0, 0.0, 1.0, 0.0, 1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0
         ], [0.0, 1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], [
             -1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0
         ], [0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], [
             -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0
         ], [0.0, 0.0, -1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0], [
             1.0, 1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0
         ], [-1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0], [
             0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0
         ], [0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0], [
             1.0, 1.0, 1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0
         ], [0.0, -1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [
             0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0
         ], [1.0, 1.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], [
             -1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0
         ], [-1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], [
             0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0
         ], [1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0], [
             0.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0
         ], [0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0], [
             0.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0
         ], [-1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0], [
             -1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0
         ], [1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [
             0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0
         ], [0.0, -1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], [
             1.0, 1.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0
         ], [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], [
             1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0
         ], [0.0, 0.0, 1.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [
             -1.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0
         ], [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [
             0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0
         ], [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0], [
             -1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0
         ], [0.0, 1.0, 0.0, -1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [
             0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0
         ], [-1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0],
         [1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]]
    }

    assert edict.diff(data, expected, np_allclose=True) == {}


def test_write_gui_with_symops():
    """Test writing geometry file"""
    sdata = {
        "lattice": [[1, 0, 0], [0, 1, 0], [0, 0, 1]],
        "ccoords": [[0, 0, 0]],
        "atomic_numbers": [1],
        "pbc": [True, True, True],
        "equivalent": [0]
    }
    symmdata = {
        "operations": [[1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]],
        "space_group": 1,
        "centring_code": 1,
        "crystal_type": 1
    }

    outstr = crystal_gui_string(sdata, symmdata)

    expected = """3 1 1
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
1
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
1
  1   0.000000000E+00   0.000000000E+00   0.000000000E+00
1 1
"""
    assert outstr == expected


def test_compute_symmetry_3d_primitive():
    """Test computing primitive symmetry"""
    sdata = {
        "lattice": [[2, 0, 0], [0, 2, 0], [0, 0, 2]],
        "ccoords": [[1, 1, 1]],
        "atomic_numbers": [5],
        "pbc": [True, True, True],
        "equivalent": [0]
    }

    outsdata, symmdata = compute_symmetry_3d(
        sdata,
        standardize=True,
        primitive=True,
        idealize=False,
        symprec=0.01,
        angletol=None)

    outstr = crystal_gui_string(outsdata, symmdata)

    expected = """3 1 6
  2.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   2.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   2.000000000E+00
48
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
1
  5   1.000000000E+00   1.000000000E+00   1.000000000E+00
221 48
"""
    assert edict.diff(outsdata, sdata, np_allclose=True) == {}
    assert outstr == expected


def test_compute_symmetry_3d_mgo_nonprimitive():
    """Test to compute nonprimitive symmetry"""
    # MgO
    atoms = crystal(
        symbols=[12, 8],
        basis=[[0, 0, 0], [0.5, 0.5, 0.5]],
        spacegroup=225,
        cellpar=[4.21, 4.21, 4.21, 90, 90, 90])

    sdata = ase_to_structdict(atoms)

    outsdata, _ = compute_symmetry_3d(
        sdata,
        standardize=False,
        primitive=False,
        idealize=False,
        symprec=0.01,
        angletol=None)

    outatoms = structdict_to_ase(outsdata)

    assert np.allclose(atoms.cell, outatoms.cell)
    assert atoms.get_number_of_atoms() == outatoms.get_number_of_atoms()


@pytest.mark.skip(reason="Test failing due to floating point error")
def test_compute_symmetry_3d_mgo_primitive():
    """Test to compute primitive symmetry"""
    # MgO
    atoms = crystal(
        symbols=[12, 8],
        basis=[[0, 0, 0], [0.5, 0.5, 0.5]],
        spacegroup=225,
        cellpar=[4.21, 4.21, 4.21, 90, 90, 90])
    sdata = ase_to_structdict(atoms)

    outsdata, symmdata = compute_symmetry_3d(
        sdata,
        standardize=True,
        primitive=True,
        idealize=False,
        symprec=0.01,
        angletol=None)

    outatoms = structdict_to_ase(outsdata)
    outstr = crystal_gui_string(outsdata, symmdata)
    expected = """3 5 6
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
 -2.105000000E+00  -2.105000000E+00   0.000000000E+00
 -2.105000000E+00   0.000000000E+00  -2.105000000E+00
48
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -2.105000000E+00   0.000000000E+00  -2.105000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -2.105000000E+00  -4.210000000E+00  -2.105000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -2.105000000E+00   0.000000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -2.105000000E+00  -4.210000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -2.105000000E+00   0.000000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -2.105000000E+00  -4.210000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
 -2.105000000E+00  -2.105000000E+00  -4.210000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -2.105000000E+00   0.000000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
 -2.105000000E+00  -2.105000000E+00  -4.210000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -2.105000000E+00  -4.210000000E+00  -2.105000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
 -2.105000000E+00  -2.105000000E+00  -4.210000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
 -2.105000000E+00  -2.105000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
 -2.105000000E+00  -2.105000000E+00  -4.210000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
 -2.105000000E+00  -2.105000000E+00  -4.210000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
 -2.105000000E+00  -2.105000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
 -2.105000000E+00  -2.105000000E+00  -4.210000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00  -2.105000000E+00  -2.105000000E+00
2
 12  -2.105000000E+00  -2.105000000E+00  -4.210000000E+00
  8  -2.105000000E+00  -2.105000000E+00  -2.105000000E+00
225 48
"""
    with open("/home/andrey/tmp/out", "w") as f:
        f.write(outstr)
    with open("/home/andrey/tmp/exp", "w") as f:
        f.write(expected)

    assert outstr == expected
    assert np.allclose(
        outatoms.cell,
        [[0, -2.105, -2.105], [-2.105, -2.105, 0], [-2.105, 0, -2.105]])
    assert outatoms.get_atomic_numbers().tolist() == [12, 8]


def test_compute_symmetry_3d_marcasite():
    """has irregular order of lengths, primitive == crystallographic"""
    atoms = crystal(
        symbols=[26, 16],
        basis=[[0, 0, 0], [0.20052, 0.37827, 0.0]],
        spacegroup=58,
        cellpar=[4.57072239, 5.60859256, 3.50105841, 90, 90, 90])
    sdata = ase_to_structdict(atoms)

    outsdata, symmdata = compute_symmetry_3d(
        sdata,
        standardize=True,
        primitive=True,
        idealize=False,
        symprec=0.01,
        angletol=None)

    outatoms = structdict_to_ase(outsdata)
    outstr = crystal_gui_string(outsdata, symmdata)

    expected = """3 1 3
  4.570722390E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   5.608592560E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   3.501058410E+00
8
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  2.285361195E+00   2.804296280E+00   1.750529205E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  2.285361195E+00   2.804296280E+00   1.750529205E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  2.285361195E+00   2.804296280E+00   1.750529205E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  2.285361195E+00   2.804296280E+00   1.750529205E+00
6
 26   0.000000000E+00   0.000000000E+00   0.000000000E+00
 26   2.285361195E+00   2.804296280E+00   1.750529205E+00
 16   9.165212536E-01   2.121562308E+00   0.000000000E+00
 16   3.654201136E+00   3.487030252E+00   0.000000000E+00
 16   1.368839941E+00   4.925858588E+00   1.750529205E+00
 16   3.201882449E+00   6.827339723E-01   1.750529205E+00
58 8
"""

    assert atoms.positions == pytest.approx(outatoms.positions)
    assert outstr == expected

@pytest.mark.skip(reason="Test failing due to floating point error")
def test_compute_symmetry_3d_inequivalent():
    """Test computing nonequivalent symmetry"""
    # MgO
    atoms = crystal(
        symbols=[12, 8],
        basis=[[0, 0, 0], [0.5, 0.5, 0.5]],
        spacegroup=225,
        cellpar=[4.21, 4.21, 4.21, 90, 90, 90])

    atoms.set_tags([1, 1, 0, 0, 0, 0, 0, 0])

    sdata = ase_to_structdict(atoms)

    outsdata, symmdata = compute_symmetry_3d(
        sdata,
        standardize=True,
        primitive=True,
        idealize=False,
        symprec=0.01,
        angletol=None)

    outatoms = structdict_to_ase(outsdata)
    outstr = crystal_gui_string(outsdata, symmdata)

    print(outstr)

    expected = """3 1 4
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
  0.000000000E+00   2.105000000E+00   2.105000000E+00
  4.210000000E+00   0.000000000E+00   0.000000000E+00
16
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
 -1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00   1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00  -1.000000000E+00
  0.000000000E+00   2.105000000E+00  -2.105000000E+00
  1.000000000E+00   0.000000000E+00   0.000000000E+00
  0.000000000E+00  -1.000000000E+00   0.000000000E+00
  0.000000000E+00   0.000000000E+00   1.000000000E+00
  0.000000000E+00   0.000000000E+00   0.000000000E+00
4
 12   4.094618574E-32   2.105000000E+00  -2.105000000E+00
 12   2.105000000E+00   2.105000000E+00   6.661338148E-16
  8   2.105000000E+00   2.105000000E+00  -2.105000000E+00
  8   1.288940756E-16   2.105000000E+00   6.661338148E-16
123 16
"""

    assert outstr == expected
    assert np.allclose(outatoms.cell,
                       [[0, 2.105, -2.105], [0, 2.105, 2.105], [4.21, 0, 0]])
    assert outatoms.get_atomic_numbers().tolist() == [12, 12, 8, 8]
    assert outatoms.get_tags().tolist() == [1, 0, 0, 0]


def difference_ops(ops1, ops2):
    """Get different rows of numpy arrays"""
    # float values have to be rounded first
    a = np.array(ops1).round(10)
    b = np.array(ops2).round(10)
    # view as structured array
    a_view = a.view([('', a.dtype)] * a.shape[1]).ravel()
    b_view = b.view([('', b.dtype)] * b.shape[1]).ravel()
    return np.setdiff1d(a_view, b_view).view(a.dtype).reshape(-1, a.shape[1])


def test_transform_conversions():
    """Test conversions between coordinate systems"""

    # from nio_sto3g_afm.crystal.gui
    lattice = [[0.000000000E+00, -2.082000000E+00, -2.082000000E+00],
               [0.000000000E+00, -2.082000000E+00, 2.082000000E+00],
               [-4.164000000E+00, 0.000000000E+00, 0.000000000E+00]]

    known_cart_ops = [[
        1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0
    ], [-1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -2.082, -2.082], [
        1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0
    ], [-1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, -2.082, -2.082], [
        1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -2.082, -2.082
    ], [-1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], [
        1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, -2.082, -2.082
    ], [-1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0], [
        -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0
    ], [1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -2.082, -2.082], [
        -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0
    ], [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -2.082, -2.082], [
        -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -2.082, -2.082
    ], [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [
        -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -2.082, -2.082
    ], [1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]]

    # from nio_sto3g_afm.crystal.out
    known_frac_ops = [[
        1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0
    ], [0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], [
        0.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0
    ], [-1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0], [
        1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0
    ], [0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], [
        -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0
    ], [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0], [
        -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0
    ], [0.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0], [
        0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0
    ], [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], [
        -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0
    ], [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0], [
        1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0
    ], [0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]]

    # convert from frac to cart
    cart_ops = ops_frac_to_cart(known_frac_ops, lattice)
    assert not difference_ops(cart_ops, known_cart_ops)

    # convert from cart to frac
    frac_ops = ops_cart_to_frac(known_cart_ops, lattice)
    assert not difference_ops(frac_ops, known_frac_ops)

    # convert back
    frac_ops2 = ops_cart_to_frac(cart_ops, lattice)
    assert not difference_ops(frac_ops2, known_frac_ops)
    cart_ops2 = ops_frac_to_cart(frac_ops, lattice)
    assert not difference_ops(cart_ops2, known_cart_ops)
